{
  "formatVersion": 1,
  "database": {
    "version": 111,
    "identityHash": "201ce61f4319e13e71787fd1c054ec04",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `firstname` TEXT, `lastname` TEXT, `mi` TEXT, `name` TEXT, `email` TEXT, `emailVerifiedAt` TEXT, `username` TEXT, `password` TEXT, `pin` TEXT, `roleId` INTEGER NOT NULL, `accessToken` TEXT, `clientId` INTEGER NOT NULL, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstname",
            "columnName": "firstname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastname",
            "columnName": "lastname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mi",
            "columnName": "mi",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emailVerifiedAt",
            "columnName": "emailVerifiedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pin",
            "columnName": "pin",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "roleId",
            "columnName": "roleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_users_username_email_status",
            "unique": false,
            "columnNames": [
              "username",
              "email",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_users_username_email_status` ON `${TABLE_NAME}` (`username`, `email`, `status`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "departments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `image` TEXT, `name` TEXT, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `departmentId` INTEGER NOT NULL, `image` TEXT, `name` TEXT, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "departmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "subCategories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, `name` TEXT, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "products",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `image` TEXT, `barcode` TEXT, `code` TEXT, `name` TEXT, `description` TEXT, `abbreviation` TEXT, `price` REAL NOT NULL, `cost` REAL NOT NULL, `markupPercentage` REAL NOT NULL, `withSerial` INTEGER NOT NULL, `unitId` INTEGER NOT NULL, `departmentId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, `subCategoryId` INTEGER NOT NULL, `isDiscountExempt` INTEGER NOT NULL, `isOpenPrice` INTEGER NOT NULL, `isVatExempt` INTEGER NOT NULL, `minAmountSold` REAL NOT NULL, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "abbreviation",
            "columnName": "abbreviation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cost",
            "columnName": "cost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "markupPercentage",
            "columnName": "markupPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "withSerial",
            "columnName": "withSerial",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unitId",
            "columnName": "unitId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "departmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subCategoryId",
            "columnName": "subCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDiscountExempt",
            "columnName": "isDiscountExempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOpenPrice",
            "columnName": "isOpenPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVatExempt",
            "columnName": "isVatExempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minAmountSold",
            "columnName": "minAmountSold",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_products_coreId_barcode_name_departmentId_status",
            "unique": false,
            "columnNames": [
              "coreId",
              "barcode",
              "name",
              "departmentId",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_products_coreId_barcode_name_departmentId_status` ON `${TABLE_NAME}` (`coreId`, `barcode`, `name`, `departmentId`, `status`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `controlNumber` TEXT, `receiptNumber` TEXT, `grossSales` REAL NOT NULL, `netSales` REAL NOT NULL, `vatableSales` REAL NOT NULL, `vatExemptSales` REAL NOT NULL, `vatAmount` REAL NOT NULL, `discountAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `tenderAmount` REAL NOT NULL, `totalCashAmount` REAL NOT NULL, `change` REAL NOT NULL, `serviceCharge` REAL NOT NULL, `type` TEXT, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `takeOrderId` INTEGER NOT NULL, `takeOrderName` TEXT, `totalQuantity` REAL NOT NULL, `totalUnitCost` REAL NOT NULL, `totalVoidQty` INTEGER NOT NULL, `totalVoidAmount` REAL NOT NULL, `shiftNumber` TEXT, `isVoid` INTEGER NOT NULL, `voidById` INTEGER NOT NULL, `voidBy` TEXT, `voidAt` TEXT, `voidRemarks` TEXT, `voidCounter` INTEGER NOT NULL, `isBackout` INTEGER NOT NULL, `isBackoutId` INTEGER NOT NULL, `backoutBy` TEXT, `backoutAt` TEXT, `chargeAccountId` INTEGER NOT NULL, `chargeAccountName` TEXT, `isAccountReceivable` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `isComplete` INTEGER NOT NULL, `completedAt` TEXT, `isCutoff` INTEGER NOT NULL, `cutoffId` INTEGER NOT NULL, `cutoffAt` TEXT, `branchId` INTEGER NOT NULL, `guestName` TEXT, `isResumePrinted` INTEGER NOT NULL, `isReturn` INTEGER NOT NULL, `totalReturnAmount` REAL NOT NULL, `totalZeroRatedAmount` REAL NOT NULL, `customerName` TEXT, `remarks` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "controlNumber",
            "columnName": "controlNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "receiptNumber",
            "columnName": "receiptNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "grossSales",
            "columnName": "grossSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netSales",
            "columnName": "netSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatableSales",
            "columnName": "vatableSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptSales",
            "columnName": "vatExemptSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatAmount",
            "columnName": "vatAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "discountAmount",
            "columnName": "discountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "tenderAmount",
            "columnName": "tenderAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCashAmount",
            "columnName": "totalCashAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "change",
            "columnName": "change",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "serviceCharge",
            "columnName": "serviceCharge",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "takeOrderId",
            "columnName": "takeOrderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "takeOrderName",
            "columnName": "takeOrderName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "totalQuantity",
            "columnName": "totalQuantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalUnitCost",
            "columnName": "totalUnitCost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalVoidQty",
            "columnName": "totalVoidQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalVoidAmount",
            "columnName": "totalVoidAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidById",
            "columnName": "voidById",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidRemarks",
            "columnName": "voidRemarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidCounter",
            "columnName": "voidCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isBackout",
            "columnName": "isBackout",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isBackoutId",
            "columnName": "isBackoutId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backoutBy",
            "columnName": "backoutBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "backoutAt",
            "columnName": "backoutAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chargeAccountId",
            "columnName": "chargeAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chargeAccountName",
            "columnName": "chargeAccountName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isAccountReceivable",
            "columnName": "isAccountReceivable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isComplete",
            "columnName": "isComplete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCutoff",
            "columnName": "isCutoff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutoffId",
            "columnName": "cutoffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutoffAt",
            "columnName": "cutoffAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "guestName",
            "columnName": "guestName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isResumePrinted",
            "columnName": "isResumePrinted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isReturn",
            "columnName": "isReturn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalReturnAmount",
            "columnName": "totalReturnAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalZeroRatedAmount",
            "columnName": "totalZeroRatedAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "customerName",
            "columnName": "customerName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remarks",
            "columnName": "remarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_transactions_isVoid_isAccountReceivable_isSentToServer_isComplete_isCutoff_isBackout_guestName_treg_isReturn_customerName",
            "unique": false,
            "columnNames": [
              "isVoid",
              "isAccountReceivable",
              "isSentToServer",
              "isComplete",
              "isCutoff",
              "isBackout",
              "guestName",
              "treg",
              "isReturn",
              "customerName"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_isVoid_isAccountReceivable_isSentToServer_isComplete_isCutoff_isBackout_guestName_treg_isReturn_customerName` ON `${TABLE_NAME}` (`isVoid`, `isAccountReceivable`, `isSentToServer`, `isComplete`, `isCutoff`, `isBackout`, `guestName`, `treg`, `isReturn`, `customerName`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "orders",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `code` TEXT, `name` TEXT, `description` TEXT, `abbreviation` TEXT, `cost` REAL NOT NULL, `qty` REAL NOT NULL, `amount` REAL NOT NULL, `originalAmount` REAL NOT NULL, `gross` REAL NOT NULL, `total` REAL NOT NULL, `totalCost` REAL NOT NULL, `isVatable` INTEGER NOT NULL, `vatAmount` REAL NOT NULL, `vatableSales` REAL NOT NULL, `vatExemptSales` REAL NOT NULL, `discountAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `departmentId` INTEGER NOT NULL, `departmentName` TEXT, `categoryId` INTEGER NOT NULL, `categoryName` TEXT, `subCategoryId` INTEGER NOT NULL, `subCategoryName` TEXT, `unitId` INTEGER NOT NULL, `unitName` TEXT, `isDiscountExempt` INTEGER NOT NULL, `isOpenPrice` INTEGER NOT NULL, `withSerial` INTEGER NOT NULL, `isVoid` INTEGER NOT NULL, `voidBy` TEXT, `voidAt` TEXT, `isBackout` INTEGER NOT NULL, `isBackoutId` INTEGER NOT NULL, `backoutBy` TEXT, `minAmountSold` REAL NOT NULL, `isPaid` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `isCompleted` INTEGER NOT NULL, `completedAt` TEXT, `branchId` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffAt` TEXT, `discountDetailsId` INTEGER NOT NULL, `serialNumber` TEXT, `remarks` TEXT, `isReturn` INTEGER NOT NULL, `zeroRatedAmount` REAL NOT NULL, `isZeroRated` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "abbreviation",
            "columnName": "abbreviation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cost",
            "columnName": "cost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "originalAmount",
            "columnName": "originalAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "gross",
            "columnName": "gross",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCost",
            "columnName": "totalCost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isVatable",
            "columnName": "isVatable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "vatAmount",
            "columnName": "vatAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatableSales",
            "columnName": "vatableSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptSales",
            "columnName": "vatExemptSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "discountAmount",
            "columnName": "discountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "departmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentName",
            "columnName": "departmentName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "categoryName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subCategoryId",
            "columnName": "subCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subCategoryName",
            "columnName": "subCategoryName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unitId",
            "columnName": "unitId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unitName",
            "columnName": "unitName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isDiscountExempt",
            "columnName": "isDiscountExempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOpenPrice",
            "columnName": "isOpenPrice",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "withSerial",
            "columnName": "withSerial",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isBackout",
            "columnName": "isBackout",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isBackoutId",
            "columnName": "isBackoutId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backoutBy",
            "columnName": "backoutBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minAmountSold",
            "columnName": "minAmountSold",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isPaid",
            "columnName": "isPaid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffAt",
            "columnName": "cutOffAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discountDetailsId",
            "columnName": "discountDetailsId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serialNumber",
            "columnName": "serialNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remarks",
            "columnName": "remarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isReturn",
            "columnName": "isReturn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zeroRatedAmount",
            "columnName": "zeroRatedAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_orders_transactionId_productId_isVoid_isPaid_isSentToServer_isCompleted_isBackout_isCutOff_cutOffId_isReturn",
            "unique": false,
            "columnNames": [
              "transactionId",
              "productId",
              "isVoid",
              "isPaid",
              "isSentToServer",
              "isCompleted",
              "isBackout",
              "isCutOff",
              "cutOffId",
              "isReturn"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_orders_transactionId_productId_isVoid_isPaid_isSentToServer_isCompleted_isBackout_isCutOff_cutOffId_isReturn` ON `${TABLE_NAME}` (`transactionId`, `productId`, `isVoid`, `isPaid`, `isSentToServer`, `isCompleted`, `isBackout`, `isCutOff`, `cutOffId`, `isReturn`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "payouts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `controlNumber` TEXT, `amount` REAL NOT NULL, `reason` TEXT, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `authorizeId` INTEGER NOT NULL, `authorizeName` TEXT, `branchId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `isCutoff` INTEGER NOT NULL, `cutoffId` INTEGER NOT NULL, `cutoffAt` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "controlNumber",
            "columnName": "controlNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorizeId",
            "columnName": "authorizeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorizeName",
            "columnName": "authorizeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutoff",
            "columnName": "isCutoff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutoffId",
            "columnName": "cutoffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutoffAt",
            "columnName": "cutoffAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "cashDenomination",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `name` TEXT, `amount` REAL NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "safekeeping",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `amount` REAL NOT NULL, `shortOver` REAL NOT NULL, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `authorizeId` INTEGER NOT NULL, `authorizeName` TEXT, `isAuto` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "shortOver",
            "columnName": "shortOver",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorizeId",
            "columnName": "authorizeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorizeName",
            "columnName": "authorizeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isAuto",
            "columnName": "isAuto",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_safekeeping_isCutOff_cutOffId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "isCutOff",
              "cutOffId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_safekeeping_isCutOff_cutOffId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`isCutOff`, `cutOffId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "safekeepingDenomination",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `safekeepingId` INTEGER NOT NULL, `cashDenominationId` INTEGER NOT NULL, `name` TEXT, `amount` REAL NOT NULL, `qty` INTEGER NOT NULL, `total` REAL NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "safekeepingId",
            "columnName": "safekeepingId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashDenominationId",
            "columnName": "cashDenominationId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_safekeepingDenomination_safekeepingId_isCutOff_cutOffId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "safekeepingId",
              "isCutOff",
              "cutOffId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_safekeepingDenomination_safekeepingId_isCutOff_cutOffId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`safekeepingId`, `isCutOff`, `cutOffId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "auditTrails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `userName` TEXT, `transactionId` INTEGER NOT NULL, `action` TEXT, `description` TEXT, `authorizeId` INTEGER NOT NULL, `authorizeName` TEXT, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "userName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "action",
            "columnName": "action",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorizeId",
            "columnName": "authorizeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorizeName",
            "columnName": "authorizeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "devices",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `type` TEXT, `vendorId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `device` TEXT, `serialNumber` TEXT, `ipAddress` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "vendorId",
            "columnName": "vendorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "device",
            "columnName": "device",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "serialNumber",
            "columnName": "serialNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ipAddress",
            "columnName": "ipAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "printerSetup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `deviceCount` INTEGER NOT NULL, `printCount` INTEGER NOT NULL, `type` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deviceCount",
            "columnName": "deviceCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printCount",
            "columnName": "printCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_printerSetup_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_printerSetup_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "printerSetupDevices",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `printerSetupId` INTEGER NOT NULL, `deviceId` INTEGER NOT NULL, `name` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSetupId",
            "columnName": "printerSetupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deviceId",
            "columnName": "deviceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_printerSetupDevices_printerSetupId_deviceId",
            "unique": false,
            "columnNames": [
              "printerSetupId",
              "deviceId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_printerSetupDevices_printerSetupId_deviceId` ON `${TABLE_NAME}` (`printerSetupId`, `deviceId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "paymentTypes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `name` TEXT, `image` TEXT, `isAR` INTEGER NOT NULL, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isAR",
            "columnName": "isAR",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_paymentTypes_coreId_status",
            "unique": false,
            "columnNames": [
              "coreId",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_paymentTypes_coreId_status` ON `${TABLE_NAME}` (`coreId`, `status`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "payments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `paymentTypeId` INTEGER NOT NULL, `paymentTypeName` TEXT, `amount` REAL NOT NULL, `isAdvancePayment` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `isVoid` INTEGER NOT NULL, `voidById` INTEGER NOT NULL, `voidBy` TEXT, `voidAt` TEXT, `isSentToServer` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffAt` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeId",
            "columnName": "paymentTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeName",
            "columnName": "paymentTypeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isAdvancePayment",
            "columnName": "isAdvancePayment",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidById",
            "columnName": "voidById",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffAt",
            "columnName": "cutOffAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_payments_transactionId_cutOffId_isCutOff_isVoid",
            "unique": false,
            "columnNames": [
              "transactionId",
              "cutOffId",
              "isCutOff",
              "isVoid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payments_transactionId_cutOffId_isCutOff_isVoid` ON `${TABLE_NAME}` (`transactionId`, `cutOffId`, `isCutOff`, `isVoid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "machineDetails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `productKey` TEXT, `machineNumber` TEXT, `serialNumber` TEXT, `minNumber` TEXT, `receiptHeader` TEXT, `receiptFooter` TEXT, `permitNumber` TEXT, `accreditationNumber` TEXT, `validFrom` TEXT, `validTo` TEXT, `tinNumber` TEXT, `cashRegisterLimitAmount` REAL NOT NULL, `vatPercentage` REAL NOT NULL, `orCounter` INTEGER NOT NULL, `xreadingCounter` INTEGER NOT NULL, `zreadingCounter` INTEGER NOT NULL, `voidCounter` INTEGER NOT NULL, `machineType` TEXT, `status` TEXT, `isSentToServer` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productKey",
            "columnName": "productKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "serialNumber",
            "columnName": "serialNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minNumber",
            "columnName": "minNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "receiptHeader",
            "columnName": "receiptHeader",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "receiptFooter",
            "columnName": "receiptFooter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permitNumber",
            "columnName": "permitNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accreditationNumber",
            "columnName": "accreditationNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "validFrom",
            "columnName": "validFrom",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "validTo",
            "columnName": "validTo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tinNumber",
            "columnName": "tinNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cashRegisterLimitAmount",
            "columnName": "cashRegisterLimitAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatPercentage",
            "columnName": "vatPercentage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "orCounter",
            "columnName": "orCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "xreadingCounter",
            "columnName": "xreadingCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "zreadingCounter",
            "columnName": "zreadingCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidCounter",
            "columnName": "voidCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineType",
            "columnName": "machineType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "authenticatedMachineUser",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `username` TEXT, `token` TEXT, `name` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "branch",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `companyId` INTEGER NOT NULL, `clusterId` INTEGER NOT NULL, `regionId` INTEGER NOT NULL, `provinceId` INTEGER NOT NULL, `cityId` INTEGER NOT NULL, `barangayId` INTEGER NOT NULL, `status` TEXT, `name` TEXT, `code` TEXT, `location` TEXT, `unitNumber` TEXT, `floorNumber` TEXT, `street` TEXT, `zip` TEXT, `slug` TEXT, `posType` TEXT, `clusterName` TEXT, `regionName` TEXT, `provinceName` TEXT, `cityName` TEXT, `barangayName` TEXT, `phoneNumber` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "companyId",
            "columnName": "companyId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clusterId",
            "columnName": "clusterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "regionId",
            "columnName": "regionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "provinceId",
            "columnName": "provinceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cityId",
            "columnName": "cityId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "barangayId",
            "columnName": "barangayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unitNumber",
            "columnName": "unitNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "floorNumber",
            "columnName": "floorNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "street",
            "columnName": "street",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "zip",
            "columnName": "zip",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "posType",
            "columnName": "posType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clusterName",
            "columnName": "clusterName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "regionName",
            "columnName": "regionName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "provinceName",
            "columnName": "provinceName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cityName",
            "columnName": "cityName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barangayName",
            "columnName": "barangayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "company",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `clientId` INTEGER NOT NULL, `registeredName` TEXT, `companyName` TEXT, `tradeName` TEXT, `logo` TEXT, `country` TEXT, `phoneNumber` TEXT, `barangayId` INTEGER NOT NULL, `cityId` INTEGER NOT NULL, `provinceId` INTEGER NOT NULL, `regionId` INTEGER NOT NULL, `slug` TEXT, `unitFloorNumber` TEXT, `regionName` TEXT, `provinceName` TEXT, `cityName` TEXT, `barangayName` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "registeredName",
            "columnName": "registeredName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "companyName",
            "columnName": "companyName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tradeName",
            "columnName": "tradeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "logo",
            "columnName": "logo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barangayId",
            "columnName": "barangayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cityId",
            "columnName": "cityId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "provinceId",
            "columnName": "provinceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "regionId",
            "columnName": "regionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unitFloorNumber",
            "columnName": "unitFloorNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "regionName",
            "columnName": "regionName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "provinceName",
            "columnName": "provinceName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cityName",
            "columnName": "cityName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barangayName",
            "columnName": "barangayName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sync",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `isSync` INTEGER NOT NULL, `isFirstSync` INTEGER NOT NULL, `updatedAt` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSync",
            "columnName": "isSync",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFirstSync",
            "columnName": "isFirstSync",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "discountTypes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `companyId` INTEGER NOT NULL, `departmentId` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `type` TEXT, `discount` INTEGER NOT NULL, `isVatExempt` INTEGER NOT NULL, `isZeroRated` INTEGER NOT NULL, `isManual` INTEGER NOT NULL, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "companyId",
            "columnName": "companyId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "departmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discount",
            "columnName": "discount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVatExempt",
            "columnName": "isVatExempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isManual",
            "columnName": "isManual",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountTypes_coreId_status",
            "unique": false,
            "columnNames": [
              "coreId",
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountTypes_coreId_status` ON `${TABLE_NAME}` (`coreId`, `status`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "chargeAccount",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `companyId` INTEGER NOT NULL, `name` TEXT, `creditLimit` INTEGER NOT NULL, `address` TEXT, `contactNumber` TEXT, `email` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "companyId",
            "columnName": "companyId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "creditLimit",
            "columnName": "creditLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contactNumber",
            "columnName": "contactNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "productsBundleItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `productCoreId` INTEGER NOT NULL, `productBundleCoreId` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productCoreId",
            "columnName": "productCoreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productBundleCoreId",
            "columnName": "productBundleCoreId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "cutOff",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `readingNumber` INTEGER NOT NULL, `beginningOR` TEXT, `endingOR` TEXT, `beginningAmount` REAL NOT NULL, `endingAmount` REAL NOT NULL, `totalTransactions` INTEGER NOT NULL, `grossSales` REAL NOT NULL, `netSales` REAL NOT NULL, `vatableSales` REAL NOT NULL, `vatExemptSales` REAL NOT NULL, `vatAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `voidQty` INTEGER NOT NULL, `voidAmount` REAL NOT NULL, `totalChange` REAL NOT NULL, `totalPayout` REAL NOT NULL, `totalServiceCharge` REAL NOT NULL, `totalDiscountAmount` REAL NOT NULL, `totalZeroRatedAmount` REAL NOT NULL, `totalCost` REAL NOT NULL, `totalSK` REAL NOT NULL, `totalShortOver` REAL NOT NULL, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `adminId` INTEGER NOT NULL, `adminName` TEXT, `shiftNumber` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readingNumber",
            "columnName": "readingNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "beginningOR",
            "columnName": "beginningOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endingOR",
            "columnName": "endingOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "beginningAmount",
            "columnName": "beginningAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endingAmount",
            "columnName": "endingAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalTransactions",
            "columnName": "totalTransactions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "grossSales",
            "columnName": "grossSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netSales",
            "columnName": "netSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatableSales",
            "columnName": "vatableSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptSales",
            "columnName": "vatExemptSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatAmount",
            "columnName": "vatAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voidQty",
            "columnName": "voidQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidAmount",
            "columnName": "voidAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalChange",
            "columnName": "totalChange",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalPayout",
            "columnName": "totalPayout",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalServiceCharge",
            "columnName": "totalServiceCharge",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalDiscountAmount",
            "columnName": "totalDiscountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalZeroRatedAmount",
            "columnName": "totalZeroRatedAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCost",
            "columnName": "totalCost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalSK",
            "columnName": "totalSK",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalShortOver",
            "columnName": "totalShortOver",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "adminId",
            "columnName": "adminId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "adminName",
            "columnName": "adminName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cutOff_endOfDayId_beginningOR_endingOR_isSentToServer_treg",
            "unique": false,
            "columnNames": [
              "endOfDayId",
              "beginningOR",
              "endingOR",
              "isSentToServer",
              "treg"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cutOff_endOfDayId_beginningOR_endingOR_isSentToServer_treg` ON `${TABLE_NAME}` (`endOfDayId`, `beginningOR`, `endingOR`, `isSentToServer`, `treg`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "endOfDay",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `readingNumber` INTEGER NOT NULL, `beginningOR` TEXT, `endingOR` TEXT, `beginningAmount` REAL NOT NULL, `endingAmount` REAL NOT NULL, `beginningCutOffCounter` INTEGER NOT NULL, `endingCutOffCounter` INTEGER NOT NULL, `totalTransactions` INTEGER NOT NULL, `grossSales` REAL NOT NULL, `netSales` REAL NOT NULL, `vatableSales` REAL NOT NULL, `vatExemptSales` REAL NOT NULL, `vatAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `voidQty` INTEGER NOT NULL, `voidAmount` REAL NOT NULL, `totalChange` REAL NOT NULL, `totalPayout` REAL NOT NULL, `totalServiceCharge` REAL NOT NULL, `totalDiscountAmount` REAL NOT NULL, `totalZeroRatedAmount` REAL NOT NULL, `totalCost` REAL NOT NULL, `totalSK` REAL NOT NULL, `totalShortOver` REAL NOT NULL, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `adminId` INTEGER NOT NULL, `adminName` TEXT, `shiftNumber` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `isComplete` INTEGER NOT NULL, `generatedDate` TEXT, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readingNumber",
            "columnName": "readingNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "beginningOR",
            "columnName": "beginningOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endingOR",
            "columnName": "endingOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "beginningAmount",
            "columnName": "beginningAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endingAmount",
            "columnName": "endingAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "beginningCutOffCounter",
            "columnName": "beginningCutOffCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endingCutOffCounter",
            "columnName": "endingCutOffCounter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalTransactions",
            "columnName": "totalTransactions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "grossSales",
            "columnName": "grossSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netSales",
            "columnName": "netSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatableSales",
            "columnName": "vatableSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptSales",
            "columnName": "vatExemptSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatAmount",
            "columnName": "vatAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voidQty",
            "columnName": "voidQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidAmount",
            "columnName": "voidAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalChange",
            "columnName": "totalChange",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalPayout",
            "columnName": "totalPayout",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalServiceCharge",
            "columnName": "totalServiceCharge",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalDiscountAmount",
            "columnName": "totalDiscountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalZeroRatedAmount",
            "columnName": "totalZeroRatedAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCost",
            "columnName": "totalCost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalSK",
            "columnName": "totalSK",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalShortOver",
            "columnName": "totalShortOver",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "adminId",
            "columnName": "adminId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "adminName",
            "columnName": "adminName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isComplete",
            "columnName": "isComplete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "generatedDate",
            "columnName": "generatedDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_endOfDay_treg_generatedDate_isSentToServer",
            "unique": false,
            "columnNames": [
              "treg",
              "generatedDate",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_endOfDay_treg_generatedDate_isSentToServer` ON `${TABLE_NAME}` (`treg`, `generatedDate`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "deviceDetails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `machineNumber` INTEGER NOT NULL, `serial` TEXT, `model` TEXT, `androidId` TEXT, `manufacturer` TEXT, `board` TEXT, `isActive` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serial",
            "columnName": "serial",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "model",
            "columnName": "model",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "androidId",
            "columnName": "androidId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "manufacturer",
            "columnName": "manufacturer",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "board",
            "columnName": "board",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "discounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `customDiscountId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `discountName` TEXT, `value` REAL NOT NULL, `grossAmount` REAL NOT NULL, `netAmount` REAL NOT NULL, `discountAmount` REAL NOT NULL, `vatExemptAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `type` TEXT, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `authorizeId` INTEGER NOT NULL, `authorizeName` TEXT, `isVoid` INTEGER NOT NULL, `voidById` INTEGER NOT NULL, `voidBy` TEXT, `voidAt` TEXT, `isSentToServer` INTEGER NOT NULL, `isZeroRated` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customDiscountId",
            "columnName": "customDiscountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountName",
            "columnName": "discountName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "grossAmount",
            "columnName": "grossAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netAmount",
            "columnName": "netAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "discountAmount",
            "columnName": "discountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptAmount",
            "columnName": "vatExemptAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorizeId",
            "columnName": "authorizeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorizeName",
            "columnName": "authorizeName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidById",
            "columnName": "voidById",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discounts_isVoid_isSentToServer_isCutOff_transactionId_customDiscountId_discountTypeId",
            "unique": false,
            "columnNames": [
              "isVoid",
              "isSentToServer",
              "isCutOff",
              "transactionId",
              "customDiscountId",
              "discountTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discounts_isVoid_isSentToServer_isCutOff_transactionId_customDiscountId_discountTypeId` ON `${TABLE_NAME}` (`isVoid`, `isSentToServer`, `isCutOff`, `transactionId`, `customDiscountId`, `discountTypeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "discountDetails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `discountId` INTEGER NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `customDiscountId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `orderId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `value` REAL NOT NULL, `discountAmount` REAL NOT NULL, `vatExemptAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `type` TEXT, `isVoid` INTEGER NOT NULL, `voidById` INTEGER NOT NULL, `voidBy` TEXT, `voidAt` TEXT, `isSentToServer` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isVatExempt` INTEGER NOT NULL, `isZeroRated` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountId",
            "columnName": "discountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customDiscountId",
            "columnName": "customDiscountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "discountAmount",
            "columnName": "discountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptAmount",
            "columnName": "vatExemptAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidById",
            "columnName": "voidById",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVatExempt",
            "columnName": "isVatExempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountDetails_isVoid_discountId_isSentToServer_isCutOff_transactionId_orderId_customDiscountId_discountTypeId",
            "unique": false,
            "columnNames": [
              "isVoid",
              "discountId",
              "isSentToServer",
              "isCutOff",
              "transactionId",
              "orderId",
              "customDiscountId",
              "discountTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountDetails_isVoid_discountId_isSentToServer_isCutOff_transactionId_orderId_customDiscountId_discountTypeId` ON `${TABLE_NAME}` (`isVoid`, `discountId`, `isSentToServer`, `isCutOff`, `transactionId`, `orderId`, `customDiscountId`, `discountTypeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "applicationSettings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `showProductDescriptionMenu` INTEGER NOT NULL, `printerNBRCharacterLine` INTEGER NOT NULL, `printerWidthMM` REAL NOT NULL, `firstInstall` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showProductDescriptionMenu",
            "columnName": "showProductDescriptionMenu",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerNBRCharacterLine",
            "columnName": "printerNBRCharacterLine",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerWidthMM",
            "columnName": "printerWidthMM",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "firstInstall",
            "columnName": "firstInstall",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "cutOffDepartments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `departmentId` INTEGER NOT NULL, `name` TEXT, `transactionCount` REAL NOT NULL, `amount` REAL NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "departmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cutOffDepartments_cutOffId_departmentId_endOfDayId_isSentToServer_treg",
            "unique": false,
            "columnNames": [
              "cutOffId",
              "departmentId",
              "endOfDayId",
              "isSentToServer",
              "treg"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cutOffDepartments_cutOffId_departmentId_endOfDayId_isSentToServer_treg` ON `${TABLE_NAME}` (`cutOffId`, `departmentId`, `endOfDayId`, `isSentToServer`, `treg`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cutOffDiscounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `name` TEXT, `transactionCount` INTEGER NOT NULL, `amount` REAL NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `isZeroRated` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cutOffDiscounts_cutOffId_discountTypeId_endOfDayId_isSentToServer_treg",
            "unique": false,
            "columnNames": [
              "cutOffId",
              "discountTypeId",
              "endOfDayId",
              "isSentToServer",
              "treg"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cutOffDiscounts_cutOffId_discountTypeId_endOfDayId_isSentToServer_treg` ON `${TABLE_NAME}` (`cutOffId`, `discountTypeId`, `endOfDayId`, `isSentToServer`, `treg`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cutOffPayments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `paymentTypeId` INTEGER NOT NULL, `name` TEXT, `transactionCount` INTEGER NOT NULL, `amount` REAL NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeId",
            "columnName": "paymentTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cutOffPayments_cutOffId_paymentTypeId_endOfDayId_isSentToServer_treg",
            "unique": false,
            "columnNames": [
              "cutOffId",
              "paymentTypeId",
              "endOfDayId",
              "isSentToServer",
              "treg"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cutOffPayments_cutOffId_paymentTypeId_endOfDayId_isSentToServer_treg` ON `${TABLE_NAME}` (`cutOffId`, `paymentTypeId`, `endOfDayId`, `isSentToServer`, `treg`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "endOfDayDepartments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `name` TEXT, `transactionCount` REAL NOT NULL, `amount` REAL NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "departmentId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_endOfDayDepartments_treg_discountTypeId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "treg",
              "discountTypeId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_endOfDayDepartments_treg_discountTypeId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`treg`, `discountTypeId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "endOfDayDiscounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `name` TEXT, `transactionCount` INTEGER NOT NULL, `amount` REAL NOT NULL, `isSentToServer` INTEGER NOT NULL, `isZeroRated` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isZeroRated",
            "columnName": "isZeroRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_endOfDayDiscounts_treg_discountTypeId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "treg",
              "discountTypeId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_endOfDayDiscounts_treg_discountTypeId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`treg`, `discountTypeId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "endOfDayPayments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `paymentTypeId` INTEGER NOT NULL, `name` TEXT, `transactionCount` INTEGER NOT NULL, `amount` REAL NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeId",
            "columnName": "paymentTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_endOfDayPayments_treg_paymentTypeId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "treg",
              "paymentTypeId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_endOfDayPayments_treg_paymentTypeId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`treg`, `paymentTypeId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cashFund",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `amount` REAL NOT NULL, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cashFund_isCutOff_cutOffId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "isCutOff",
              "cutOffId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cashFund_isCutOff_cutOffId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`isCutOff`, `cutOffId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cashFundDenomination",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `cashFundId` INTEGER NOT NULL, `cashDenominationId` INTEGER NOT NULL, `name` TEXT, `amount` REAL NOT NULL, `qty` INTEGER NOT NULL, `total` REAL NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashFundId",
            "columnName": "cashFundId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashDenominationId",
            "columnName": "cashDenominationId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cashFundDenomination_cashFundId_isCutOff_cutOffId_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "cashFundId",
              "isCutOff",
              "cutOffId",
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cashFundDenomination_cashFundId_isCutOff_cutOffId_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`cashFundId`, `isCutOff`, `cutOffId`, `endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "discountTypeDepartments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `status` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountTypeDepartments_coreId_discountTypeId",
            "unique": false,
            "columnNames": [
              "coreId",
              "discountTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountTypeDepartments_coreId_discountTypeId` ON `${TABLE_NAME}` (`coreId`, `discountTypeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "paymentTypeFields",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `paymentTypeId` INTEGER NOT NULL, `name` TEXT, `fieldType` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeId",
            "columnName": "paymentTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fieldType",
            "columnName": "fieldType",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_paymentTypeFields_paymentTypeId",
            "unique": false,
            "columnNames": [
              "paymentTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_paymentTypeFields_paymentTypeId` ON `${TABLE_NAME}` (`paymentTypeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "paymentTypeFieldOptions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `paymentTypeFieldId` INTEGER NOT NULL, `name` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentTypeFieldId",
            "columnName": "paymentTypeFieldId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_paymentTypeFieldOptions_paymentTypeFieldId",
            "unique": false,
            "columnNames": [
              "paymentTypeFieldId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_paymentTypeFieldOptions_paymentTypeFieldId` ON `${TABLE_NAME}` (`paymentTypeFieldId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "discountTypeFields",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `discountTypeId` INTEGER NOT NULL, `name` TEXT, `fieldType` TEXT, `isRequired` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeId",
            "columnName": "discountTypeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fieldType",
            "columnName": "fieldType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRequired",
            "columnName": "isRequired",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountTypeFields_discountTypeId",
            "unique": false,
            "columnNames": [
              "discountTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountTypeFields_discountTypeId` ON `${TABLE_NAME}` (`discountTypeId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "discountTypeFieldOptions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `discountTypeFieldId` INTEGER NOT NULL, `name` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountTypeFieldId",
            "columnName": "discountTypeFieldId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountTypeFieldOptions_discountTypeFieldId",
            "unique": false,
            "columnNames": [
              "discountTypeFieldId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountTypeFieldOptions_discountTypeFieldId` ON `${TABLE_NAME}` (`discountTypeFieldId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "paymentOtherInformations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineId` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `paymentId` INTEGER NOT NULL, `name` TEXT, `value` TEXT, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isVoid` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineId",
            "columnName": "machineId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "paymentId",
            "columnName": "paymentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_paymentOtherInformations_transactionId_paymentId_cutOffId_isCutOff_isVoid_isSentToServer",
            "unique": false,
            "columnNames": [
              "transactionId",
              "paymentId",
              "cutOffId",
              "isCutOff",
              "isVoid",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_paymentOtherInformations_transactionId_paymentId_cutOffId_isCutOff_isVoid_isSentToServer` ON `${TABLE_NAME}` (`transactionId`, `paymentId`, `cutOffId`, `isCutOff`, `isVoid`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "discountOtherInformations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineId` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `discountId` INTEGER NOT NULL, `name` TEXT, `value` TEXT, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isVoid` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineId",
            "columnName": "machineId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discountId",
            "columnName": "discountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_discountOtherInformations_transactionId_discountId_cutOffId_isCutOff_isVoid_isSentToServer",
            "unique": false,
            "columnNames": [
              "transactionId",
              "discountId",
              "cutOffId",
              "isCutOff",
              "isVoid",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_discountOtherInformations_transactionId_discountId_cutOffId_isCutOff_isVoid_isSentToServer` ON `${TABLE_NAME}` (`transactionId`, `discountId`, `cutOffId`, `isCutOff`, `isVoid`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "spotAudit",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `beginningOR` TEXT, `endingOR` TEXT, `beginningAmount` REAL NOT NULL, `endingAmount` REAL NOT NULL, `totalTransactions` INTEGER NOT NULL, `grossSales` REAL NOT NULL, `netSales` REAL NOT NULL, `vatableSales` REAL NOT NULL, `vatExemptSales` REAL NOT NULL, `vatAmount` REAL NOT NULL, `vatExpense` REAL NOT NULL, `voidQty` INTEGER NOT NULL, `voidAmount` REAL NOT NULL, `totalChange` REAL NOT NULL, `totalPayout` REAL NOT NULL, `totalServiceCharge` REAL NOT NULL, `totalDiscountAmount` REAL NOT NULL, `totalCost` REAL NOT NULL, `safekeepingAmount` REAL NOT NULL, `safekeepingShortOver` REAL NOT NULL, `totalSK` REAL NOT NULL, `totalShortOver` REAL NOT NULL, `cashierId` INTEGER NOT NULL, `cashierName` TEXT, `adminId` INTEGER NOT NULL, `adminName` TEXT, `shiftNumber` INTEGER NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "beginningOR",
            "columnName": "beginningOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endingOR",
            "columnName": "endingOR",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "beginningAmount",
            "columnName": "beginningAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "endingAmount",
            "columnName": "endingAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalTransactions",
            "columnName": "totalTransactions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "grossSales",
            "columnName": "grossSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netSales",
            "columnName": "netSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatableSales",
            "columnName": "vatableSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExemptSales",
            "columnName": "vatExemptSales",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatAmount",
            "columnName": "vatAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "vatExpense",
            "columnName": "vatExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voidQty",
            "columnName": "voidQty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidAmount",
            "columnName": "voidAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalChange",
            "columnName": "totalChange",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalPayout",
            "columnName": "totalPayout",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalServiceCharge",
            "columnName": "totalServiceCharge",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalDiscountAmount",
            "columnName": "totalDiscountAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCost",
            "columnName": "totalCost",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "safekeepingAmount",
            "columnName": "safekeepingAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "safekeepingShortOver",
            "columnName": "safekeepingShortOver",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalSK",
            "columnName": "totalSK",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalShortOver",
            "columnName": "totalShortOver",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "cashierId",
            "columnName": "cashierId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashierName",
            "columnName": "cashierName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "adminId",
            "columnName": "adminId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "adminName",
            "columnName": "adminName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_spotAudit_isCutOff_cutOffId_beginningOR_endingOR_isSentToServer_treg",
            "unique": false,
            "columnNames": [
              "isCutOff",
              "cutOffId",
              "beginningOR",
              "endingOR",
              "isSentToServer",
              "treg"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_spotAudit_isCutOff_cutOffId_beginningOR_endingOR_isSentToServer_treg` ON `${TABLE_NAME}` (`isCutOff`, `cutOffId`, `beginningOR`, `endingOR`, `isSentToServer`, `treg`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "spotAuditDenomination",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `machineNumber` INTEGER NOT NULL, `branchId` INTEGER NOT NULL, `spotAuditId` INTEGER NOT NULL, `cashDenominationId` INTEGER NOT NULL, `name` TEXT, `amount` REAL NOT NULL, `qty` INTEGER NOT NULL, `total` REAL NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `shiftNumber` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "machineNumber",
            "columnName": "machineNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branchId",
            "columnName": "branchId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spotAuditId",
            "columnName": "spotAuditId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cashDenominationId",
            "columnName": "cashDenominationId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shiftNumber",
            "columnName": "shiftNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_spotAuditDenomination_isCutOff_cutOffId_spotAuditId_isSentToServer",
            "unique": false,
            "columnNames": [
              "isCutOff",
              "cutOffId",
              "spotAuditId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_spotAuditDenomination_isCutOff_cutOffId_spotAuditId_isSentToServer` ON `${TABLE_NAME}` (`isCutOff`, `cutOffId`, `spotAuditId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "officialReceiptInformation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `transactionId` INTEGER NOT NULL, `name` TEXT, `address` TEXT, `tin` TEXT, `businessStyle` TEXT, `isVoid` INTEGER NOT NULL, `voidBy` INTEGER NOT NULL, `voidName` TEXT, `voidAt` TEXT, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tin",
            "columnName": "tin",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "businessStyle",
            "columnName": "businessStyle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVoid",
            "columnName": "isVoid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidBy",
            "columnName": "voidBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voidName",
            "columnName": "voidName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voidAt",
            "columnName": "voidAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_officialReceiptInformation_transactionId_isVoid_isSentToServer_name",
            "unique": false,
            "columnNames": [
              "transactionId",
              "isVoid",
              "isSentToServer",
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_officialReceiptInformation_transactionId_isVoid_isSentToServer_name` ON `${TABLE_NAME}` (`transactionId`, `isVoid`, `isSentToServer`, `name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "roles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `name` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_roles_coreId_userId",
            "unique": false,
            "columnNames": [
              "coreId",
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_roles_coreId_userId` ON `${TABLE_NAME}` (`coreId`, `userId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "permissions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `coreId` INTEGER NOT NULL, `parentCoreId` INTEGER NOT NULL, `roleId` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `name` TEXT, `level` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coreId",
            "columnName": "coreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentCoreId",
            "columnName": "parentCoreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roleId",
            "columnName": "roleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "level",
            "columnName": "level",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_permissions_userId_roleId",
            "unique": false,
            "columnNames": [
              "userId",
              "roleId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_permissions_userId_roleId` ON `${TABLE_NAME}` (`userId`, `roleId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "upload",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `type` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_upload_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_upload_type` ON `${TABLE_NAME}` (`type`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "cutOffProducts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `cutOffId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `qty` REAL NOT NULL, `isCutOff` INTEGER NOT NULL, `cutOffAt` TEXT, `endOfDayId` INTEGER NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffId",
            "columnName": "cutOffId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isCutOff",
            "columnName": "isCutOff",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cutOffAt",
            "columnName": "cutOffAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_cutOffProducts_cutOffId_isSentToServer_endOfDayId",
            "unique": false,
            "columnNames": [
              "cutOffId",
              "isSentToServer",
              "endOfDayId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cutOffProducts_cutOffId_isSentToServer_endOfDayId` ON `${TABLE_NAME}` (`cutOffId`, `isSentToServer`, `endOfDayId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "endOffDayProducts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `endOfDayId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `qty` REAL NOT NULL, `isSentToServer` INTEGER NOT NULL, `treg` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endOfDayId",
            "columnName": "endOfDayId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "qty",
            "columnName": "qty",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isSentToServer",
            "columnName": "isSentToServer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "treg",
            "columnName": "treg",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_endOffDayProducts_endOfDayId_isSentToServer",
            "unique": false,
            "columnNames": [
              "endOfDayId",
              "isSentToServer"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_endOffDayProducts_endOfDayId_isSentToServer` ON `${TABLE_NAME}` (`endOfDayId`, `isSentToServer`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '201ce61f4319e13e71787fd1c054ec04')"
    ]
  }
}